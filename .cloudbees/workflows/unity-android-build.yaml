apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: unity-android-build

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:  # Permet de lancer manuellement le workflow

jobs:
  build:
    steps:
      - name: Checkout
        uses: https://github.com/cloudbees-io/checkout@v1
        with:
          repository: lsa26/AngryBirdsRemakeUnity
          ref: main

      - name: Verify scripts
        uses: docker://ubuntu:20.04
        shell: bash
        run: |
          echo "Vérification des scripts dans le repo..."
          ls -la "${CLOUDBEES_WORKSPACE}/Assets/Editor/"
          test -f "${CLOUDBEES_WORKSPACE}/Assets/Editor/BuildScript.cs" || { echo "BuildScript.cs manquant!"; exit 1; }
          test -f "${CLOUDBEES_WORKSPACE}/Assets/Editor/SetupAndroidBuild.cs" || { echo "SetupAndroidBuild.cs manquant!"; exit 1; }

      - name: Build with Unity
        uses: docker://unityci/editor:ubuntu-2020.1.1f1-android-0.3.0
        shell: bash
        run: |
          # Configuration de Unity
          echo "Démarrage du build Unity..."
          
          # Exécution du build Unity
          unity-editor \
            -quit \
            -batchmode \
            -projectPath "${CLOUDBEES_WORKSPACE}" \
            -executeMethod BuildScript.Build \
            -logFile unity_build.log
          
          # Vérification du résultat du build
          BUILD_RESULT=$?
          if [ $BUILD_RESULT -ne 0 ]; then
              echo "Build failed! Showing log:"
              cat unity_build.log || echo "Log not found"
              exit 1
          fi
          
          echo "Build log:"
          cat unity_build.log || echo "Log file not found"
          
          # Vérification des fichiers générés
          echo "Contenu du dossier Builds:"
          ls -la "${CLOUDBEES_WORKSPACE}/Builds/" || echo "Le dossier Builds n'existe pas"
